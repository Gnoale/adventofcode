#!/usr/bin/env python3
from collections import defaultdict

orbitals = []

with open('input', 'r') as f:
    for e in f:
#        orbitals += [[e.split(')')[0]] + [e.split(')')[1].strip('\n')]]
        orbitals.append((e.split(')')[0], e.split(')')[1].strip('\n'))) 
#print(orbitals)
#orbitals = [ 
#    ('C','D'),
#    ('B','C'),
#    ('D','E'),
#    ('B','G'),
#    ('E','F'),
#    ('G','H'),
#    ('D','I'),
#    ('E','J'),
#    ('J','K'),
#    ('COM','B'),
#    ('K','L')
#    ]

graph = defaultdict(list)


for k, v in orbitals:
    graph[k].append(v)


# {'C': ['D'], 'B': ['C', 'G'], 'D': ['E', 'I'], 'E': ['F', 'J'], 'G': ['H'], 'J': ['K'], 'COM': ['B'], 'K': ['L']})

queue = []
visited = []
level = {}

def traverse_graph(node, graph):
    
    queue.append(node)
    visited.append(node)
    level[node] = 0

    while len(queue) > 0:
        print("Visited : ",visited)
        node = queue[0]
        queue.pop(0)
        next_nodes = graph[node]
        
        for n in next_nodes:
            level[n] = level[node] + 1 
            if n not in visited:
                queue.append(n)
                visited.append(n)

traverse_graph('COM', graph)
print(level)

O = 0
for k, v in level.items():
    O += v

print(O)
